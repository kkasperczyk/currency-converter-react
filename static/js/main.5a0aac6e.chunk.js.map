{"version":3,"sources":["Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","Main/styled.js","Main/index.js","Form/styled.js","Form/index.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","GlobalStyles.js","App.js","useRates.js","serviceWorker.js","index.js"],"names":["StyledContainer","styled","div","Container","children","StyledHeader","header","StyledHeaderTitle","Header","title","StyledFooter","footer","Footer","StyledMain","main","Main","StyledFormLabelText","span","StyledFormField","input","StyledFormFieldSelect","select","StyledFormButtonContainer","StyledFormButton","button","Form","calculateResult","setResult","useState","amount","setAmount","convertFrom","setConvertFrom","convertTo","setConvertTo","onSubmit","event","preventDefault","onReset","type","name","min","step","required","autoFocus","placeholder","value","onChange","target","StyledResultLabel","StyledResultField","Result","result","readOnly","StyledClock","Clock","date","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","weekday","hour","minute","second","day","month","formatDate","GlobalStyles","createGlobalStyle","App","rates","isError","data","setData","setTimeout","a","axios","get","then","response","ratesAPI","dateAPI","catch","useRates","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.5a0aac6e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: white;\r\n  border-radius: 50px;\r\n  margin: 100px auto;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  text-align: center;\r\n  border-bottom: 2px solid hsl(199, 88%, 60%);\r\n`;\r\n\r\nexport const StyledHeaderTitle = styled.header`\r\n  color: hsl(240, 100%, 50%);\r\n  padding: 15px;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.7px;\r\n  margin: 0;\r\n  text-transform: lowercase;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHeader, StyledHeaderTitle } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <StyledHeader>\r\n    <StyledHeaderTitle>{title}</StyledHeaderTitle>\r\n  </StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n  text-align: center;\r\n  border-top: 2px solid hsl(199, 88%, 60%);\r\n  color: #333;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  padding: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = ({ title }) => (\r\n  <StyledFooter>\r\n    <span>{title}</span>\r\n  </StyledFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n  text-align: center;\r\n  background-color: white;\r\n  padding: 10px 30px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledMain } from \"./styled\";\r\n\r\nconst Main = ({ children }) => <StyledMain>{children}</StyledMain>;\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFormLabelText = styled.span`\r\n  display: inline-block;\r\n  width: 100%;\r\n  max-width: 80px;\r\n  margin-right: 5px;\r\n  color: #444;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const StyledFormField = styled.input`\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  width: 100%;\r\n  max-width: 80px;\r\n  border-radius: 20px;\r\n  max-width: 140px;\r\n`;\r\n\r\nexport const StyledFormFieldSelect = styled.select`\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  width: 100%;\r\n  max-width: 80px;\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const StyledFormButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledFormButton = styled.button`\r\n  margin: 0 10px;\r\n  background-color: hsl(240, 100%, 50%);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  text-transform: lowercase;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.7px;\r\n  border: 2px solid transparent;\r\n  border-radius: 20px;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: hsl(240, 100%, 50%);\r\n    border: 2px solid hsl(240, 100%, 50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyledFormLabelText,\r\n  StyledFormField,\r\n  StyledFormFieldSelect,\r\n  StyledFormButtonContainer,\r\n  StyledFormButton,\r\n} from \"./styled\";\r\n\r\nconst Form = ({ calculateResult, setResult }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [convertFrom, setConvertFrom] = useState(\"PLN\");\r\n  const [convertTo, setConvertTo] = useState(\"EUR\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(convertFrom, convertTo, amount);\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n    setAmount(\"\");\r\n    setConvertFrom(\"PLN\");\r\n    setConvertTo(\"EUR\");\r\n    setResult(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset}>\r\n      <p>\r\n        <label>\r\n          <StyledFormLabelText>Amount:</StyledFormLabelText>\r\n          <StyledFormField\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            min=\"1\"\r\n            step=\"any\"\r\n            required\r\n            autoFocus\r\n            placeholder=\"Enter amount\"\r\n            value={amount}\r\n            onChange={({ target }) => setAmount(target.value)}\r\n          />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          <StyledFormLabelText>From:</StyledFormLabelText>\r\n          <StyledFormFieldSelect\r\n            value={convertFrom}\r\n            onChange={({ target }) => setConvertFrom(target.value)}\r\n            required\r\n          >\r\n            <option>PLN</option>\r\n            <option>USD</option>\r\n            <option>GBP</option>\r\n            <option>EUR</option>\r\n            <option>CHF</option>\r\n          </StyledFormFieldSelect>\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          <StyledFormLabelText>To:</StyledFormLabelText>\r\n          <StyledFormFieldSelect\r\n            value={convertTo}\r\n            onChange={({ target }) => setConvertTo(target.value)}\r\n            required\r\n          >\r\n            <option>PLN</option>\r\n            <option>USD</option>\r\n            <option>GBP</option>\r\n            <option>EUR</option>\r\n            <option>CHF</option>\r\n          </StyledFormFieldSelect>\r\n        </label>\r\n      </p>\r\n      <StyledFormButtonContainer>\r\n        <p>\r\n          <StyledFormButton>Convert</StyledFormButton>\r\n        </p>\r\n        <p>\r\n          <StyledFormButton type=\"reset\">Reset</StyledFormButton>\r\n        </p>\r\n      </StyledFormButtonContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledResultLabel = styled.span`\r\n  display: inline-block;\r\n  width: 100%;\r\n  max-width: 80px;\r\n  margin-right: 5px;\r\n  color: #444;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const StyledResultField = styled.input`\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  width: 100%;\r\n  max-width: 80px;\r\n  border-radius: 20px;\r\n  max-width: 140px;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledResultLabel, StyledResultField } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n  <p>\r\n    <label>\r\n      <StyledResultLabel>Result:</StyledResultLabel>\r\n      <StyledResultField type=\"number\" readOnly value={result} />\r\n    </label>\r\n  </p>\r\n);\r\n\r\nexport default Result;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.div`\r\n  text-align: right;\r\n  font-family: monospace;\r\n  color: #777;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) =>\r\n  date.toLocaleString(\"en-US\", {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  });\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return <StyledClock>{formatDate(date)}</StyledClock>;\r\n};\r\n\r\nexport default Clock;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return date;\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  ::after,\r\n  ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: \"Lato\", sans-serif;\r\n    background-image: url(\"https://images.unsplash.com/photo-1502920514313-52581002a659?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1047&q=80\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\nimport { useRates } from \"./useRates\";\nimport Container from \"./Container\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport Clock from \"./Clock\";\nimport { GlobalStyles } from \"./GlobalStyles\";\n\nfunction App() {\n  const { date, rates, isError } = useRates();\n  const [result, setResult] = useState(\"\");\n\n  const calculateResult = (convertFrom, convertTo, amount) => {\n    const result = (amount * rates[convertTo]) / rates[convertFrom];\n\n    setResult(`${result.toFixed(2)}`);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <Container>\n        <Header title=\"currency converter\" />\n        <Main>\n          <Clock />\n          {rates ? (\n            <>\n              <Form calculateResult={calculateResult} setResult={setResult} />\n              <Result result={result} />\n              <p>\n                Currency exchange rates updated on: <strong>{date}</strong>.\n              </p>\n            </>\n          ) : !isError ? (\n            \"Loading rates...\"\n          ) : (\n            \"Error, try again later\"\n          )}\n        </Main>\n        <Footer title=\"Copyright Konrad Kasperczyk 2020 All Rights Reserved\" />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useRates = () => {\r\n  const [data, setData] = useState({\r\n    rates: \"\",\r\n    date: \"\",\r\n    isError: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getRates = async () => {\r\n      await axios\r\n        .get(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n        .then((response) => {\r\n          const ratesAPI = response.data.rates;\r\n          const dateAPI = response.data.date;\r\n          setData({ rates: ratesAPI, date: dateAPI, isError: false });\r\n        })\r\n        .catch(() => {\r\n          setData({ isError: true });\r\n        });\r\n    };\r\n    setTimeout(getRates, 2000);\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}